import csv
import datetime
import time
import argparse
import logging
from urllib.request import urlopen
from urllib.parse import quote_plus
parser = argparse.ArgumentParser()
max={i:0 for i in range(1, 13)}
parser.add_argument("--symbol", help="stock symbol")
parser.add_argument("--file", help="file to process by programm")
args = parser.parse_args()

def process_file(file):
	with open(file, 'r') as csvfile:
		spamreader = csv.DictReader(csvfile)
		for row in spamreader:
			date = time.strptime(row['Date'], "%Y-%m-%d")
			current = float(row['Close'])
			if current>max[date.tm_mon]:
				max[date.tm_mon] = current
	print(max)

def process_network(symbol):
    start = datetime.date(2015, 1, 1)
    end = datetime.date(2015, 12, 31)
    url = "http://www.google.com/finance/historical?q={0}&startdate={1}&enddate={2}&output=csv"
    url = url.format(symbol.upper(), quote_plus(start.strftime('%b %d, %Y')), quote_plus(end.strftime('%b %d, %Y')))
    data = urlopen(url).readlines()
    #['\ufeffDate', 'Open', 'High', 'Low', 'Close', 'Volume']
    for row in data[1:]:
        values=row.decode().strip().split(',')
        date = time.strptime(values[0], "%d-%b-%y")
        current = float(values[4])
        if current>max[date.tm_mon]:
            max[date.tm_mon] = current
    print(max)

if __name__ == '__main__':
    logging.basicConfig(filename='app.log', level=logging.INFO)
    
    try:
        if args.file:
            logging.info('File read')   
            process_file(args.file)
            logging.info('File processed') 
            logging.info('---------------------------------')
        elif args.symbol:
            logging.info('Start hacking')
            process_network(args.symbol)
            logging.info('Internet hacked')
            logging.info('---------------------------------') 
    except Exception as inst:
         logging.error(type(inst))    
         logging.error(inst.args)     
         logging.error(inst)  
